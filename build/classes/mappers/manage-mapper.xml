<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="manageMapper">

	<resultMap id="manageResultSet" type="Manage" >
		
		<id property="idx" column="IDX"/>
		<result property="yyyy" column="YYYY"/>
		<result property="mm" column="MM"/>
		<result property="wdt" column="WDT"/>
		<result property="edt" column="EDT"/>
		<result property="uId" column="U_ID"/>
		<result property="gasM" column="GAS_M"/>
		<result property="elM" column="EL_M"/>
		<result property="wtM" column="WT_M"/>
		<result property="itM" column="IT_M"/>
		<result property="maM" column="MA_M"/>
		
		<result property="gNum" column="G_NUM"/>
		<result property="pNum" column="P_NUM"/>
		<result property="defM" column="DEF_M"/>
		<result property="cGm" column="C_GM"/>
		<result property="uGm" column="U_GM"/>
		<result property="aGm" column="A_GM"/>
		<result property="sGm" column="S_GM"/>
		<result property="kGm" column="K_GM"/>
		<result property="mGm" column="M_GM"/>
		<result property="avgGm" column="AVG_GM"/>
		<result property="jsGm" column="JS_GM"/>
		<result property="enGu" column="EN_GU"/>
		<result property="monGu" column="MON_GU"/>
		<result property="useG" column="USE_G"/>
		<result property="useB" column="USE_B"/>
		<result property="gChk" column="G_CHK"/>
		<result property="autoM" column="AUTO_M"/>
		<result property="autoHow" column="AUTO_HOW"/>
		<result property="autoWhen" column="AUTO_WHEN"/>
		
		
		<result property="defM" column="DEF_M"/>
		<result property="lEm" column="L_EM"/>
		<result property="woEm" column="WO_EM"/>
		<result property="miEm" column="MI_EM"/>
		<result property="aEm" column="A_EM"/>
		<result property="gyEm" column="GY_EM"/>
		<result property="jsEm" column="JS_EM"/>
		<result property="useE" column="USE_E"/>


		<result property="jiT" column="JI_T"/>
		<result property="jiM" column="JI_M"/>
		<result property="memo" column="MEMO"/>
		<result property="suma" column="SUMA"/>
		
		
		
	</resultMap>



	<!--기본 공과금 데이터 시작 -->

	<!-- 공과금 전체 페이지 당월 데이터 -->
	<select id="manageList" parameterType="Manage" resultMap="manageResultSet">
		SELECT IDX, YYYY,MM,U_ID, GAS_M, EL_M, WT_M, IT_M, MA_M
		FROM MANAGE_MA WHERE U_ID= #{uId} AND YYYY =#{yyyy} AND MM = #{mm}	
	</select>

	<!-- 공과금 전체 페이지 당월,전월 비교 데이터 -->
	<select id="manageNP" parameterType="Manage" resultMap="manageResultSet">
		SELECT IDX, YYYY,MM,U_ID, NVL(GAS_M,0) as GAS_M, NVL(EL_M,0) AS EL_M , NVL(WT_M,0) AS WT_M, NVL(IT_M,0) AS IT_M,
		NVL(MA_M,0) AS MA_M
		FROM MANAGE_MA WHERE U_ID= #{uId} AND (YYYY =#{yyyy} AND MM = #{mm} or YYYY =#{yyyy2} AND MM = #{mm2}) 	
		ORDER BY MM DESC
	</select>
	
	<!-- 공과금 전체 페이지 3개월 비교 데이터 -->
	<select id="manageListP3" parameterType="Manage" resultMap="manageResultSet">
		SELECT IDX, YYYY,MM,U_ID, NVL(GAS_M,0) as GAS_M, NVL(EL_M,0) AS EL_M , NVL(WT_M,0) AS WT_M, NVL(IT_M,0) AS IT_M, NVL(MA_M,0) AS MA_M
		FROM MANAGE_MA WHERE U_ID= #{uId} AND (YYYY =#{yyyy} AND MM = #{mm} or YYYY =#{yyyy2} AND MM = #{mm2} or YYYY =#{yyyy3} AND MM = #{mm3})
		   ORDER BY YYYY DESC, MM DESC 	
	</select>
	
	<!-- 공과금 전체 페이지 1년 비교 데이터 -->
	<select id="manageListP12" parameterType="Manage" resultMap="manageResultSet">
		SELECT IDX, YYYY,MM,U_ID, NVL(GAS_M,0) as GAS_M, NVL(EL_M,0) AS EL_M , NVL(WT_M,0) AS WT_M, NVL(IT_M,0) AS IT_M, NVL(MA_M,0) AS MA_M
		FROM MANAGE_MA WHERE U_ID= #{uId} AND DATE_FORMAT(CONCAT(YYYY, MM,"01"),'%Y%m%d') BETWEEN DATE_FORMAT(CONCAT(${yyyy}-1, #{mm},"01"),'%Y%m%d') AND DATE_FORMAT(CONCAT(#{yyyy}, #{mm},"01"),'%Y%m%d')
		order by yyyy,mm  

	</select>
	
	
	<!-- 공과금 전체 페이지 당월,전년 동월 비교 데이터 -->
	<select id="managePassSame" parameterType="Manage" resultMap="manageResultSet">
		SELECT IDX, YYYY,MM,U_ID, NVL(GAS_M,0) as GAS_M, NVL(EL_M,0) AS EL_M , NVL(WT_M,0) AS WT_M, NVL(IT_M,0) AS IT_M,
		NVL(MA_M,0) AS MA_M
		FROM MANAGE_MA WHERE U_ID= #{uId} AND (YYYY =#{yyyy} AND MM = #{mm} or YYYY =${yyyy}-1 AND MM = #{mm}) 	
		ORDER BY MM DESC
	</select>
	
	<!-- 공과금 데이터 insert(당월) -->
	<insert id="insertMAll" parameterType="Manage">
		INSERT INTO MANAGE_MA(YYYY, MM, WDT,EDT, U_ID, GAS_M, EL_M, WT_M, IT_M, MA_M) VALUES(#{yyyy}, #{mm}, #{gChk}, NOW(), #{uId}, 
		#{gasM},#{elM},#{wtM},#{itM},#{maM})
	</insert>

	<!-- 공과금 데이터 update (기본값만) -->
	<update id="updateMAll" parameterType="Manage">
		UPDATE MANAGE_MA SET EDT=NOW(), GAS_M=#{gasM}, EL_M=#{elM}, WT_M=#{wtM}, IT_M=#{itM}, MA_M=#{maM}
		WHERE U_ID=#{uId} AND YYYY=#{yyyy} AND MM=#{mm}
	</update>
	
	<!-- 가스 상세 데이터 insert(당월) -->
	<insert id="insertMGAS" parameterType="Manage">
		INSERT INTO MANAGE_GAS(JIDX,U_ID,AUTO_HOW,AUTO_WHEN,AUTO_M,G_NUM, P_NUM,WDT, EDT) VALUES (#{jidx}, #{uId},
		( select A.AUTO_HOW From MANAGE_GAS A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId}),
        ( select A.AUTO_WHEN From MANAGE_GAS A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId})
        ,( select A.AUTO_M From MANAGE_GAS A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId})
        ,( select A.G_NUM From MANAGE_GAS A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId})
        ,( select A.P_NUM From MANAGE_GAS A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId}
        ),#{gChk},NOW()
		)
	</insert>
	
	<!-- 공과금 상세(가스,수도...) 데이터 가져올 때 필요한 기본 공과금 데이터 IDX -->
	<select id="manageIndex" parameterType="Manage" resultType="_int">
			SELECT IDX
		FROM MANAGE_MA WHERE U_ID= #{uId} AND YYYY =#{yyyy} AND MM = #{mm}	
	</select>
	
		<!-- 공과금 상세(가스,수도...) 데이터 가져올 때 필요한 기본 공과금 데이터 IDX (null 오류로 String 버전 하나 더 추가) -->
	<select id="manageIndexS" parameterType="Manage" resultType="string">
			SELECT IDX
		FROM MANAGE_MA WHERE U_ID= #{uId} AND YYYY =#{yyyy} AND MM = #{mm}	
	</select>
	
	<!--  가스  데이터 update -->
	<update id="updateTgasM" parameterType="Manage">
		UPDATE MANAGE_MA SET GAS_M=${defM} + ${cGm} + ${uGm} + ${aGm} + ${sGm} + ${mGm} + ${kGm} + ${avgGm} - ${jsGm} + ${enGu}
		WHERE IDX=#{idx}
	</update>
	<!--  인터넷  데이터 update -->
	<update id="updateTItM" parameterType="Manage">
		UPDATE MANAGE_MA SET IT_M=${defM} - ${sIm} - ${gIm} + ${aGm} + ${mGm} - ${sGm}
		WHERE IDX=#{idx}
	</update>
	
	<!-- 공과금 전체 페이지 데이터 있는지 체크 -->
	<select id="chkD" parameterType="Manage" resultType="String">
		select IDX from  MANAGE_MA where U_ID= #{uId} AND YYYY =#{yyyy} AND MM = #{mm}	
	</select>
	
	
	<!--기본 공과금 데이터 종료 -->
	
	
	<!--가스 상세 데이터 시작 -->
	
	<!-- 가스 상세 데이터 가져오기 (당월분 1) -->
	<select id="manageGasNow" parameterType="Manage" resultMap="manageResultSet">
		SELECT * ,
		 SUM(DEF_M + C_GM + U_GM + A_GM + S_GM + M_GM + K_GM + AVG_GM - JS_GM + EN_GU) AS SUMA
		FROM MANAGE_GAS A
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
		WHERE A.U_ID=#{uId} AND B.YYYY=#{yyyy} AND B.MM=#{mm}  	
	</select>
	
	
	<!-- 공과금 데이터 update (기본값만) -->
	<update id="updateGas" parameterType="Manage">
		UPDATE MANAGE_GAS SET EDT=NOW(), DEF_M=#{defM}, C_GM=#{cGm}, U_GM=#{uGm}, A_GM=#{aGm}
		, S_GM=#{sGm},K_GM=#{kGm}, M_GM=#{mGm}, AVG_GM=#{avgGm}, JS_GM=#{jsGm}, EN_GU=#{enGu}, MON_GU=#{monGu}
		, USE_G=#{useG}, USE_B=#{useB}, EDT=NOW()
		WHERE U_ID=#{uId} AND IDX=#{idx}
	</update>
	
	<!-- 공과금 기본 가스 데이터 update (개발멈춤)--> 
	<update id="updateMGas" parameterType="Manage">
		UPDATE MANAGE_MA SET GAS_M=${defM} + ${cGm} +${uGm} +${aGm} +${sGm} +${mGm} + ${avgGm} +  ${jsGm} +${enGu}
		WHERE U_ID=#{uId} AND IDX=#{jidx}
	</update>
	
	<!--  가스 지출 여부 데이터 update -->
	<update id="updateGchk" parameterType="Manage">
		UPDATE MANAGE_GAS SET G_CHK=#{gChk}, EDT=NOW()
		WHERE IDX=#{idx}
	</update>
	<!--  가스 납부 여부 체크 확인 update -->
	<update id="updateGchkA" parameterType="Manage">
		UPDATE MANAGE_GAS SET AUTO_M=#{autoM}, EDT=NOW()
		WHERE IDX=#{idx}
	</update>
	
	<!--  가스 계량기 번호 데이터 update -->
	<update id="updateGasNum" parameterType="Manage">
		UPDATE MANAGE_GAS SET G_NUM=#{gNum}, EDT=NOW()
		WHERE IDX=#{idx}
	</update>
	
	<!--  가스 고객 번호 데이터 update -->
	<update id="updatepNum" parameterType="Manage">
		UPDATE MANAGE_GAS SET P_NUM=#{pNum}, EDT=NOW()
		WHERE IDX=#{idx}
	</update>
	
	<!--  가스 전체 데이터 update -->
	<update id="allUpdateGas" parameterType="Manage">
		UPDATE MANAGE_GAS SET 
		EDT=NOW(), DEF_M=#{defM}, C_GM=#{cGm}, U_GM=#{uGm}, A_GM=#{aGm}
		, S_GM=#{sGm},K_GM=#{kGm}, M_GM=#{mGm}, AVG_GM=#{avgGm}, 
		JS_GM=#{jsGm}, EN_GU=#{enGu}, MON_GU=#{monGu}
		, USE_G=#{useG}, USE_B=#{useB},
		 P_NUM=#{pNum}, G_NUM=#{gNum}, G_CHK=#{gChk},AUTO_M=#{autoM}
		 ,AUTO_HOW=#{autoHow}, AUTO_WHEN=#{autoWhen}
		WHERE U_ID=#{uId} AND IDX=#{idx}
	</update>
	
	
	<!--가스 당월,전월 비교 데이터 -->
	<select id="gasNP" parameterType="Manage" resultMap="manageResultSet">
		 SELECT A.IDX, B.YYYY,B.MM,B.U_ID, 
        SUM(DEF_M + C_GM + U_GM + A_GM + S_GM + M_GM + K_GM + AVG_GM - JS_GM + EN_GU) AS SUMA,
        U_GM,MON_GU, USE_G
		FROM MANAGE_GAS A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId} AND (B.YYYY =#{yyyy} AND B.MM = #{mm} or B.YYYY =#{yyyy2} AND B.MM = #{mm2})
        GROUP BY  A.IDX, B.YYYY,B.MM,B.U_ID,U_GM,MON_GU, USE_G 	
        ORDER BY A.WDT
	</select>
	
	<!--가스 6개월치 비교 데이터 -->
	<select id="gasNP6m" parameterType="Manage" resultMap="manageResultSet">
		 SELECT A.IDX, B.YYYY,B.MM,B.U_ID, 
        SUM(DEF_M + C_GM + U_GM + A_GM + S_GM + M_GM + K_GM + AVG_GM - JS_GM + EN_GU) AS SUMA
		FROM MANAGE_GAS A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE  A.U_ID= #{uId} AND TO_CHAR(B.WDT, 'YYYY/MM') BETWEEN #{yyyy2} AND #{yyyy}
        GROUP BY  A.IDX, B.YYYY,B.MM,B.U_ID,B.WDT
        ORDER BY B.YYYY,B.MM         
	</select>
	
	<select id="newUp" parameterType="Manage" resultType="String">
		 
		<if test='tp.equals("1")'>
		SELECT A.P_NUM FROM
		(select ROW_NUMBER() OVER (ORDER BY P_NUM DESC ) AS RN , P_NUM FROM MANAGE_GAS WHERE (U_ID=#{uId} AND P_NUM IS NOT NULL AND TO_CHAR(WDT, 'YYYY/MM') != #{yyyy}) ) A
		WHERE A.RN = 1
		</if>
		<if test='tp.equals("2")'>
		SELECT A.G_NUM FROM
		(select ROW_NUMBER() OVER (ORDER BY G_NUM DESC ) AS RN , G_NUM FROM MANAGE_GAS WHERE (U_ID=#{uId} AND G_NUM IS NOT NULL AND TO_CHAR(WDT, 'YYYY/MM') != #{yyyy}) ) A
		WHERE A.RN = 1
		</if>
	</select>
	
	<!-- 가스  페이지 1년 비교 데이터 -->
	<select id="gasNP12m" parameterType="Manage" resultMap="manageResultSet">
		SELECT A.JIDX, B.IDX,B.YYYY,B.MM,A.U_ID, 
        sum(NVL(A.DEF_M,0) + NVL(A.C_GM,0)
       + NVL(A.U_GM,0) 
       + NVL(A.A_GM,0) 
       + NVL(A.S_GM,0) 
       + NVL(A.M_GM,0) 
       + NVL(A.K_GM,0) 
       + NVL(A.AVG_GM,0) 
       - NVL(A.JS_GM,0) 
       + NVL(A.EN_GU,0) ) AS SUMA
		FROM MANAGE_GAS A
        LEFT JOIN MANAGE_MA  B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId}
        AND DATE_FORMAT(CONCAT(B.YYYY, B.MM,"01"),'%Y%m%d') BETWEEN DATE_FORMAT(CONCAT(${yyyy}-1+ "", #{mm},"01"),'%Y%m%d') AND DATE_FORMAT(CONCAT(#{yyyy}, #{mm},"01"),'%Y%m%d')
          GROUP BY B.YYYY,B.MM
		order by B.yyyy,B.mm  
	</select>
	
		<!-- 가스 데이터 있는지 체크 -->
	<select id="chkDG" parameterType="Manage" resultType="String">
		select A.IDX from  MANAGE_GAS A 
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX 
		where A.U_ID= #{uId} AND B.YYYY =#{yyyy} AND B.MM = #{mm}	
	</select>
	
	<!-- 가스 페이지 당월,전년 동월 비교 데이터 -->
	<select id="gasPassSame" parameterType="Manage" resultMap="manageResultSet">
		 SELECT A.IDX, B.YYYY,B.MM,B.U_ID, 
       NVL(SUM(DEF_M + C_GM + U_GM + A_GM + S_GM + M_GM + K_GM + AVG_GM - JS_GM + EN_GU),0) AS SUMA,
        NVL(U_GM,0) AS U_GM,
        NVL(MON_GU,0) AS MON_GU, 
        NVL(USE_G,0) AS USE_G
		FROM MANAGE_GAS A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId} AND (B.YYYY =#{yyyy} AND B.MM = #{mm} or B.YYYY =${yyyy}-1 AND B.MM = #{mm})
        GROUP BY  A.IDX, B.YYYY,B.MM,B.U_ID,U_GM,MON_GU, USE_G 	
        ORDER BY A.WDT
	</select>
	
	
	<!--가스 상세 데이터 종료-->
	
	
	<!-- 인터넷 시작 -->
	<!-- 가스 상세 데이터 가져오기 (당월분 1) -->
	<select id="manageItNow" parameterType="Manage" resultMap="manageResultSet">
		SELECT *,
		  sum(NVL(A.DEF_M,0)
       - NVL(A.S_IM,0) 
       - NVL(A.G_IM,0) 
       + NVL(A.A_GM,0) 
       - NVL(A.S_GM,0) 
       + NVL(A.M_GM,0) 
		 ) AS SUMA
		FROM MANAGE_IT A
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
		WHERE A.U_ID=#{uId} AND B.YYYY=#{yyyy} AND B.MM=#{mm}  	
	</select>
	
	
	
	<!-- 인터넷 상세 데이터 insert(당월) -->
	<insert id="insertMIT" parameterType="Manage">
	INSERT INTO MANAGE_IT(JIDX,U_ID,AUTO_HOW,AUTO_WHEN,AUTO_M,P_NUM,WDT, EDT) VALUES (#{jidx}, #{uId},
		( select A.AUTO_HOW From MANAGE_IT A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId}),
        ( select A.AUTO_WHEN From MANAGE_IT A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId})
        ,( select A.AUTO_M From MANAGE_IT A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId})
        ,( select A.P_NUM From MANAGE_IT A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId}
        ),#{gChk},NOW()
		)
	</insert>
	
		<!--  인터넷 전체 데이터 update -->
	<update id="allUpdateIt" parameterType="Manage">
		UPDATE MANAGE_IT SET 
		EDT=NOW(), DEF_M=#{defM}, G_IM=#{gIm},S_IM=#{sIm}, A_GM=#{aGm}
		, S_GM=#{sGm}, M_GM=#{mGm},
		 P_NUM=#{pNum}, G_CHK=#{gChk},AUTO_M=#{autoM}
		 ,AUTO_HOW=#{autoHow}, AUTO_WHEN=#{autoWhen}
		WHERE U_ID=#{uId} AND IDX=#{idx}
	</update>
	
	<!--인터넷 당월,전월 비교 데이터 -->
	<select id="itNP" parameterType="Manage" resultMap="manageResultSet">
		 SELECT A.IDX, B.YYYY,B.MM,B.U_ID, 
      	  sum(NVL(A.DEF_M,0)- NVL(A.S_IM,0)- NVL(A.G_IM,0) + NVL(A.A_GM,0) - NVL(A.S_GM,0) + NVL(A.M_GM,0) ) AS SUMA
        ,NVL(DEF_M,0) AS DEF_M 
        ,NVL(A_GM,0) AS A_GM
        ,NVL(S_GM,0) AS S_GM
        ,NVL(M_GM,0) AS M_GM
		FROM MANAGE_IT A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId} AND (B.YYYY =#{yyyy} AND B.MM = #{mm} or B.YYYY =#{yyyy2} AND B.MM = #{mm2})
        GROUP BY  A.IDX, B.YYYY,B.MM,B.U_ID,DEF_M, A_GM, S_GM, M_GM 	
        ORDER BY A.WDT
	</select>
	
		<!-- 인터넷 데이터 있는지 체크 -->
	<select id="chkDI" parameterType="Manage" resultType="String">
		select A.IDX from  MANAGE_IT A 
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX 
		where A.U_ID= #{uId} AND B.YYYY =#{yyyy} AND B.MM = #{mm}	
	</select>
	
	
	<!-- 인터넷 페이지 1년 비교 데이터 -->
	<select id="itNP12m" parameterType="Manage" resultMap="manageResultSet">
		SELECT A.JIDX, B.IDX,B.YYYY,B.MM,A.U_ID, 
        sum(NVL(A.DEF_M,0)
       - NVL(A.S_IM,0) 
       - NVL(A.G_IM,0) 
       + NVL(A.A_GM,0) 
       - NVL(A.S_GM,0) 
       + NVL(A.M_GM,0) 
		 ) AS SUMA
		FROM MANAGE_IT A
        LEFT JOIN MANAGE_MA  B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId}
        AND DATE_FORMAT(CONCAT(B.YYYY, B.MM,"01"),'%Y%m%d') BETWEEN DATE_FORMAT(CONCAT(${yyyy}-1+ "", #{mm},"01"),'%Y%m%d') AND DATE_FORMAT(CONCAT(#{yyyy}, #{mm},"01"),'%Y%m%d')
          GROUP BY B.YYYY,B.MM
		order by B.yyyy,B.mm  
	</select>
	
	<!-- 인터넷 페이지 당월,전년 동월 비교 데이터 -->
	<select id="itPassSame" parameterType="Manage" resultMap="manageResultSet">
		 SELECT A.IDX, B.YYYY,B.MM,B.U_ID, 
        sum(NVL(A.DEF_M,0)- NVL(A.S_IM,0)- NVL(A.G_IM,0)+ NVL(A.A_GM,0) - NVL(A.S_GM,0) + NVL(A.M_GM,0)	 ) AS SUMA,
       NVL(A.DEF_M,0) AS DEF_M,
       NVL(A.S_IM,0) AS S_IM, 
       NVL(A.G_IM,0) AS G_IM,
       NVL(A.A_GM,0) AS A_GM,
       NVL(A.S_GM,0) AS S_GM,
       NVL(A.M_GM,0) AS M_GM 
		FROM MANAGE_IT A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId} AND (B.YYYY =#{yyyy} AND B.MM = #{mm} or B.YYYY =${yyyy}-1 AND B.MM = #{mm})
        GROUP BY  A.IDX, B.YYYY,B.MM,B.U_ID,DEF_M,S_IM, A_GM, S_GM,  M_GM	
        ORDER BY A.WDT
	</select>
	
	
	
	
	
	<!-- 인터넷 종료 -->
	
	
	<!-- 전기 시작 -->
	<!-- 전기 상세 데이터 insert(당월) -->
	<insert id="insertMEL" parameterType="Manage">
		INSERT INTO MANAGE_EL(JIDX,U_ID,AUTO_HOW,AUTO_WHEN,AUTO_M,G_NUM, P_NUM,WDT, EDT) VALUES (#{jidx}, #{uId},
		( select A.AUTO_HOW From MANAGE_EL A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId}),
        ( select A.AUTO_WHEN From MANAGE_EL A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId})
        ,( select A.AUTO_M From MANAGE_EL A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId})
        ,( select A.G_NUM From MANAGE_EL A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId})
        ,( select A.P_NUM From MANAGE_EL A
        left join MANAGE_MA B on A.JIDX=B.IDX
        where B.YYYY=#{yyyy} and B.MM=#{mm}-1 AND B.U_ID=#{uId}
        ),#{gChk},NOW()
		)
	</insert>
	
	<!-- 전기 상세 데이터 가져오기 (당월분 1) -->
	<select id="manageElNow" parameterType="Manage" resultMap="manageResultSet">
		SELECT * ,
		 SUM(DEF_M + L_EM + WO_EM - MI_EM + A_EM + GY_EM - JS_EM) AS SUMA
		FROM MANAGE_EL A
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
		WHERE A.U_ID=#{uId} AND B.YYYY=#{yyyy} AND B.MM=#{mm}  	
	</select>
	
	
	<!--전기 당월,전월 비교 데이터 -->
	<select id="elNP" parameterType="Manage" resultMap="manageResultSet">
		 SELECT A.IDX, B.YYYY,B.MM,B.U_ID, 
       SUM(DEF_M + L_EM + WO_EM - MI_EM + A_EM + GY_EM - JS_EM) AS SUMA
        ,USE_E
		FROM MANAGE_EL A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId} AND (B.YYYY =#{yyyy} AND B.MM = #{mm} or B.YYYY =#{yyyy2} AND B.MM = #{mm2})
        GROUP BY  A.IDX, B.YYYY,B.MM,B.U_ID,USE_E 	
        ORDER BY A.WDT
	</select>
	
	<!-- 범디 페이지 당월,전년 동월 비교 데이터 -->
	<select id="elPassSame" parameterType="Manage" resultMap="manageResultSet">
		 SELECT A.IDX, B.YYYY,B.MM,B.U_ID, 
       NVL(SUM(DEF_M + L_EM + WO_EM - MI_EM + A_EM + GY_EM - JS_EM),0) AS SUMA,
        NVL(USE_E,0) AS USE_E
		FROM MANAGE_EL A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId} AND (B.YYYY =#{yyyy} AND B.MM = #{mm} or B.YYYY =${yyyy}-1 AND B.MM = #{mm})
        GROUP BY  A.IDX, B.YYYY,B.MM,B.U_ID,USE_E 	
        ORDER BY A.WDT
	</select>
	
		<!--전기 6개월치 비교 데이터 -->
	<select id="elNP6m" parameterType="Manage" resultMap="manageResultSet">
		 SELECT A.IDX, B.YYYY,B.MM,B.U_ID, 
        SUM(DEF_M + L_EM + WO_EM - MI_EM + A_EM + GY_EM - JS_EM) AS SUMA
		FROM MANAGE_EL A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE  A.U_ID= #{uId} AND TO_CHAR(B.WDT, 'YYYY/MM') BETWEEN #{yyyy2} AND #{yyyy}
        GROUP BY  A.IDX, B.YYYY,B.MM,B.U_ID,B.WDT
        ORDER BY B.YYYY,B.MM         
	</select>
	
	<!-- 전기 페이지 1년 비교 데이터 -->
	<select id="elNP12m" parameterType="Manage" resultMap="manageResultSet">
		SELECT A.JIDX, B.IDX,B.YYYY,B.MM,A.U_ID, 
        sum(NVL(A.DEF_M,0) + NVL(A.L_EM,0)
       + NVL(A.WO_EM,0) 
       - NVL(A.MI_EM,0) 
       + NVL(A.A_EM,0) 
       + NVL(A.GY_EM,0) 
       - NVL(A.JS_EM,0) 
       ) AS SUMA
		FROM MANAGE_EL A
        LEFT JOIN MANAGE_MA  B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId}
        AND DATE_FORMAT(CONCAT(B.YYYY, B.MM,"01"),'%Y%m%d') BETWEEN DATE_FORMAT(CONCAT(${yyyy}-1+ "", #{mm},"01"),'%Y%m%d') AND DATE_FORMAT(CONCAT(#{yyyy}, #{mm},"01"),'%Y%m%d')
          GROUP BY B.YYYY,B.MM
		order by B.yyyy,B.mm  
	</select>
	
		<!-- 전기 데이터 있는지 체크 -->
	<select id="chkDE" parameterType="Manage" resultType="String">
		select A.IDX from  MANAGE_EL A 
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX 
		where A.U_ID= #{uId} AND B.YYYY =#{yyyy} AND B.MM = #{mm}	
	</select>
	
	<!--  전기 데이터 update -->
	<update id="updateEl" parameterType="Manage">
		UPDATE MANAGE_MA SET EL_M=${defM} + ${lEm} + ${woEm} - ${miEm} + ${aEm} + ${gyEm} - ${jsEm}
		WHERE IDX=#{idx}
	</update>
	
	<select id="newUpel" parameterType="Manage" resultType="String">
		 
		<if test='tp.equals("1")'>
		SELECT A.P_NUM FROM
		(select ROW_NUMBER() OVER (ORDER BY P_NUM DESC ) AS RN , P_NUM FROM MANAGE_EL WHERE (U_ID=#{uId} AND P_NUM IS NOT NULL AND TO_CHAR(WDT, 'YYYY/MM') != #{yyyy}) ) A
		WHERE A.RN = 1
		</if>
		<if test='tp.equals("2")'>
		SELECT A.G_NUM FROM
		(select ROW_NUMBER() OVER (ORDER BY G_NUM DESC ) AS RN , G_NUM FROM MANAGE_EL WHERE (U_ID=#{uId} AND G_NUM IS NOT NULL AND TO_CHAR(WDT, 'YYYY/MM') != #{yyyy}) ) A
		WHERE A.RN = 1
		</if>
	</select>
	
		
	<!-- 공과금 데이터 update (기본값만) -->
	<update id="updateTelM" parameterType="Manage">
		UPDATE MANAGE_EL SET DEF_M=#{defM}, L_EM=#{lEm}, WO_EM=#{woEm}, MI_EM=#{miEm}
		, A_EM=#{aEm},GY_EM=#{gyEm}, JS_EM=#{jsEm},
		 USE_E=#{useE}, EDT=NOW()
		WHERE U_ID=#{uId} AND IDX=#{idx}
	</update>

	<!--  전기 전체 데이터 update -->
	<update id="allUpdateEl" parameterType="Manage">
		UPDATE MANAGE_EL SET 
		EDT=NOW(), DEF_M=#{defM}, L_EM=#{lEm}, WO_EM=#{woEm}, MI_EM=#{miEm}
		, A_EM=#{aEm},GY_EM=#{gyEm}, JS_EM=#{jsEm},
		 USE_E=#{useE},
		 P_NUM=#{pNum}, G_NUM=#{gNum}, G_CHK=#{gChk},AUTO_M=#{autoM}
		 ,AUTO_HOW=#{autoHow}, AUTO_WHEN=#{autoWhen}, EDT=NOW()
		WHERE U_ID=#{uId} AND IDX=#{idx}
	</update>
	<!--  전기 종료 -->

	
	<!-- 관리비 상세 데이터 가져오기 (당월분 1) -->
	<select id="manageMaNow" parameterType="Manage" resultMap="manageResultSet">
		SELECT *
		FROM MANAGE_MAM A
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
		WHERE A.U_ID=#{uId} AND B.YYYY=#{yyyy} AND B.MM=#{mm}  	
	</select>
	
		<!-- 관리 상세 데이터 insert(당월) -->
	<insert id="insertMMa" parameterType="Manage">
		INSERT INTO MANAGE_MAM(JIDX,U_ID, WDT, EDT, JI_T, JI_M) VALUES (#{jidx}, #{uId},#{gChk},NOW(), #{jiT}, #{jiM})
	</insert>
	
	
	<update id="updateMm" parameterType="Manage">
		UPDATE MANAGE_MAM SET 
		EDT=NOW(), JI_M=#{jiM}, JI_T=#{jiT}, G_CHK=#{gChk}
		WHERE U_ID=#{uId} AND IDX=#{idx}
	</update>
	
	<select id="manageMaNowSum"  parameterType="Manage" resultType="String">
		SELECT SUM(JI_M) AS SUMA
		FROM MANAGE_MAM A
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
		WHERE A.U_ID=#{uId} AND B.YYYY=#{yyyy} AND B.MM=#{mm}  	
	</select>
	
	<delete id="deleteMm" parameterType="Manage">
		DELETE FROM MANAGE_MAM
		WHERE U_ID=#{uId} AND IDX IN 
		<foreach item="item" collection="idxL"
      open="(" separator="," close=")">
        #{item}
  </foreach>
	</delete>
	
	<!--관리비 당월,전월 비교 데이터 -->
	<select id="MmNP" parameterType="Manage" resultMap="manageResultSet">
		 SELECT
       B.YYYY,B.MM, SUM(JI_M) AS SUMA
		FROM MANAGE_MAM A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId} AND (B.YYYY =#{yyyy} AND B.MM = #{mm} or B.YYYY =#{yyyy2} AND B.MM = #{mm2})
        GROUP BY  B.YYYY,B.MM
        ORDER BY A.WDT
	</select>
	
	<!-- 관리비 페이지 당월,전년 동월 비교 데이터 -->
	<select id="mMPassSame" parameterType="Manage" resultMap="manageResultSet">
		 SELECT B.YYYY,B.MM,B.U_ID, 
        sum(NVL(A.JI_M,0)) AS SUMA    
		FROM MANAGE_MAM A
        LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX
        WHERE A.U_ID= #{uId} AND (B.YYYY =#{yyyy} AND B.MM = #{mm} or B.YYYY =${yyyy}-1 AND B.MM = #{mm})
        GROUP BY B.YYYY,B.MM,B.U_ID	
        ORDER BY A.WDT
	</select>
	
	<!-- 관리비 데이터 있는지 체크 -->
	<select id="chkDM" parameterType="Manage" resultType="String">
		select COUNT(A.IDX) AS IDX from  MANAGE_MAM A 
		LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX 
		where A.U_ID= #{uId} AND B.YYYY =#{yyyy} AND B.MM = #{mm}	
	</select>
	
	
	<!-- 관리 상세 데이터 insert(당월) -->
	<insert id="insertMMm" parameterType="Manage">
	INSERT INTO MANAGE_MAM(JIDX,U_ID,WDT, EDT,JI_T)
	SELECT A.JIDX, B.U_ID ,#{gChk} ,NOW() ,A.JI_T
I_T  FROM  MANAGE_MAM A
LEFT JOIN MANAGE_MA B ON A.JIDX=B.IDX 
WHERE B.IDX=#{jidx} AND B.U_ID=#{uId}	
		)
	</insert>
	
		<!-- 관리  데이터 update -->
	<update id="updateTMm" parameterType="Manage">
		UPDATE MANAGE_MA SET MA_M=${jiM}
		WHERE IDX=#{idx}
	</update>
	
</mapper>
